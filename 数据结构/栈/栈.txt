#include<iostream>
using namespace std;
class stack {
public:
	stack(int n)	//分配内存，初始化栈空间，栈顶
	{
		size = n;
		p = new char[size];
		top = 0;
	}
	~stack()	//回收栈空间
	{
		delete[]p;
	}
	bool stackempty()	//判断栈是否为空
	{
		if (top == 0)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	bool stackfull()	//判断栈是否为满
	{
		if (top == size)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	void clearstack()	//清空栈
	{
		top = 0;
	}
	int stacklength()	//栈长度，已有元素的个数
	{
		return top;
	}
	void push(char ele)		//元素入栈，栈顶上升
	{
		if (!stackfull())
		{
			p[top] = ele;
			top++;
		}
		else {
			cout << "stack is full" << endl;
		}
	}
	bool pop(char &ele)		//元素出栈，栈顶下降
	{
		if (!stackempty())
		{
			top--;
			ele = p[top];
			return true;
			
		}
		else {
			cout << "stack is empty" << endl;
			return false;
		}
	}
	void traverse()		//遍历栈中所有元素
	{
		for (int i = 0; i < top; i++)
		{
			cout << p[i] << endl;
		}
	}
private:
	char *p;		//栈空间指针
	int size;		//栈容量
	int top;		//栈顶，栈中元素个数
};

int main()
{

}