#include<iostream>
using namespace std;
int a[10] = { 13,27,19,2,8,12,2,8,30,89 };
int b[10];

void Marge(int a[], int s, int m, int e, int tmp[])
{
	//将数组ade局部a[s,m]和a[m+1,e]合并到tmp，并保证tmp有序，然后再拷贝回a[s,m]
	//归并操作时间复杂度为O(e-m+1),即O（n）
	int pb = 0;
	int p1 = s, p2 = m + 1;
	while (p1 <= m&&p2 <= e)
	{
		if (a[p1] < a[p2])
			tmp[pb++] = a[p1++];
		else
			tmp[pb++] = a[p2++];
	}
}


void MergeSort(int a[],int s,int e,int tmp[])  //第一个参数表示要排序的数组，最后一个参数表示临时存放的空间，中间两个数组表示要排序的位置
{
	if (s < e)
	{
		int m = s + (e - s) / 2;
		MergeSort(a, s, m, tmp);
		MergeSort(a, m + 1, e, tmp);
		Marge(a, s, m, e, tmp);
	}

}


int main()
{
	int size = sizeof(a) / sizeof(int);
	MergeSort(a, 0, size - 1, b);
	for (int i = 0; i < size; i++)
	{
		cout << a[i] << " ";
	}
	cout << endl;
	return 0;
}