#include<iostream>
#include<cstring>
#include<algorithm>

using namespace std;
//输入数据：第一行是数列的长度，第二行是n个整数的值
//输出：最长上升子序列的长度
//子问题：求以ak为终点的最长上升子序列的长度  n个子问题的解中，最大的那个就是整个问题的解
//确定状态：数列中数的位置k就是“状态”，而状态k对应的“值”，就是以ak为终点的最长上升子序列的长度，有n个状态
//找出状态转移方程
const int MAXN = 1010;
int a[MAXN];
int maxLen[MAXN];
int main()
{
	int N;
	cin >> N;

	for (int i = 2; i <= N; i++)  //每次求以第i个数为终点的最长上升子序列的长度
	{
		for (int j = 1; j < i; j++)  //查看以第j个数为重点的最长上升子序列
		{
			if (a[i] > a[j])
			{
				maxLen[i] = max(maxLen[i], maxLen[j] + 1);
			}
		}
	}
	cout << *max_element(maxLen + 1, maxLen + N + 1);
	return 0;
}